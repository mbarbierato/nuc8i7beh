Mojave "Vanilla" Installation
=============================

Mojave USB Installer:
sudo /Applications/Install\ macOS\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/Rally --nointeraction --downloadassets

Generate a random number with Clover Configurator and check it on Apple's Coverage Check website:
https://checkcoverage.apple.com/us/en/?sn=GENERATEDSERIAL

The following AML files were required for Mojave to work properly:

SSDT-HDEF.aml  = AppleALC support with injected layout ID (alternatively in Clover, set boot arguments as "alcid=28")
SSDT-LPCB.aml  = Vanilla support for compatible Intel Corporation Coffee Lake LPC Controller;
SSDT-OTHER.aml = Provision of ACPI names to IORegistry for various non-recognised devices (aesthetic reasons)
SSDT-SATA.aml  = Vanilla support for compatible Intel Corporation Coffee Lake SATA Controller;
SSDT-UIAC.aml  = USB ports enumeration/patching (via USBInjectAll.kext) for Intel Corporation Coffee Lake USB 3.1 xHCI Controller;
SSDT-XOSI.aml  = Improved USB behaviour by adding further Windows versions for ACPI implementation.

Now through Clover patching, most of device compatibility is defined in the config.plist for (IGPU) (SATA) (LPCB) (HDEF) (SSD0)
except a couple of AML files that are left as needed: SSDT-OTHER.aml and SSDT-XOSI.aml


Minimal Clover UEFI Drivers (x64)
=================================

ApfsDriverLoader.efi = Recognize and boot from APFS volumes by loading apfs.efi from ApfsContainer located on block device;
AptioMemoryFix.efi   = Needed for Afps driver and includes NVRAM fixes, as well as better memory management;
HFSPlus.efi          = Original EFI file-system driver for booting from an HFS+ file system (used instead of with VBoxHfs.efi)

Abandoned/Replaced/Unused:
CsmVideoDxe.efi      = Video driver for Clover GUI allowing to choose more resolutions (based on CSM Module in BIOS and requires CSM to be enabled in BIOS)
DataHubDxe.efi       = DataHub protocol support and mandatory for macOS (some systems report working equally well without it)
EmuVariableUefi.efi  = Support for NVRAM variables needed by macOS if hardware NVRAM is not supported;
FSInject.efi         = Driver responsible for kext injection for 10.7 or older that load individual kexts instead of prelinkedkernel;
NvmExpressDxe.efi    = Support for Haswell and older when no NVM Express driver storage is built into the firmware;
OsxAptioFix3Drv.efi  = Alternate driver (v3) to fix memory problems on EFI firmware, do not use with OsxAptioFix2Drv.efi;
SMCHelper.efi        = Restore SMC keys registerd in NVRAM by FakeSMC (instead of and not compatible with VirtualSMC.efi)
VBoxHfs.efi          = Open source EFI file-system driver for booting from an HFS+ file system (replacing HSFPlus.efi)
VirtualSMC.efi       = Provides UEFI support to SMC in conjunction with FileVault 2 functionality (no longer developed)

N.B. The MLB variable in "Rt Variables" of Clover must include the same as "Board Serial Number" (13+4 digits) in SMBIOS.

N.B. According to https://github.com/acidanthera/WhateverGreen we need the boot argument "-igfxnohdmi" to disable DP to HDMI conversion patches for digital sound.

N.B. On some hardware, CsmVideoDxe.efi may cause Clover to fail to start. It may also be a contributing factor to kernel panics when waking from sleep; use with precaution.


Basic MacOS Kernel Extensions
=============================

The following drivers are required for Mojave to work properly:

Patcher       = Lilu.kext
Audio         = AppleALC.kext
Graphics      = WhateverGreen.kext
NVMe Storage  = NVMeFix.kext (abandoned)
Ethernet      = IntelMausi.kext / IntelMausiEthernet.kext
Patcher       = FakePCIID.kext
Audio         = FakePCIID_Intel_HDMI_Audio.kext
SMC           = FakeSMC.kext (by Slice)
CPU Monitor   = IntelCPUMonitor.kext (by Slice)
H/W Monitor   = HWMonitorSMC2.app (by Slice)
USB Ports Fix = USBPorts.kext (generated by Hackintool, replacing USBInjectAll.kext that is now obsolete)


Intel UHD Graphics 655 (Coffee Lake)
====================================
According to: https://github.com/acidanthera/WhateverGreen/blob/master/Manual/FAQ.IntelHD.en.md
Framebuffer 0x3EA50004 = Mobile platform; 3 connectors; No FB Memory allocated; 58 MB stolen memory.


Regarding CFG Lock (MSR 0xE2)
=============================

Starting with Haswell Macs, CPU Power Management functionality was moved into the kernel (known as XNU CPU Power Management).
The bootloader must patch the kernel to prevent writes to MSR_PKG_CST_CONFIG_CONTROL (namely, MSR 0xE2) which is frequently
"locked" on many systems, usually without a BIOS setting to disable "CFG Lock". Without this patch, kernel panics will arise.

It seems that the register MSR 0xE2 is constantly locked and there is no BIOS setting for changing this. Moreover, opening
NUC BIOS v56 and v78 firmware images in "UEFITool" and searching for "CFG Lock" unicode string produced no results, meaning
that the NUC firmware does not support modifications at all...

This results to the Power Management patches being absolutely necessary, at all times.

CLOVER = Enable 'KernelPm' (Haswell and later) or 'AppleIntelCPUPM' (Ivy Bridge or earlier) patch in Clover configuration.
OPENCORE = Set 'AppleCpuPmCfgLock' and 'AppleXcpmCfgLock' to TRUE in OpenCore configuration.

Clover guide for Coffee Lake: https://hackintosh.gitbook.io/-r-hackintosh-vanilla-desktop-guide/config.plist-per-hardware/coffee-lake
